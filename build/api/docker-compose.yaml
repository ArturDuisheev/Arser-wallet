version: '3.9'

services:
  database:
    image: postgres:latest
    environment:
    - POSTGRES_DB=arser_wallet
    - POSTGRES_USER=admin
    - POSTGRES_PASSWORD=admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d arser_wallet"]
      interval: 10s
      timeout: 5s
      retries: 80
      start_period: 10s
    networks:
      - forwebapi

  webapi:
    build:
      context: ../../api/
    container_name: webapi
    command: ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]


    ports:
        - 8000:8000
    networks:
      - forwebapi
    depends_on:
        database:
          condition: service_healthy
  server:
    container_name: backend
    build:
      context: ../../server/
      dockerfile: Dockerfile
    working_dir: /home/server/server
    environment:
      DB_HOST: db
      DB_USERNAME: ${DB_DATABASE:-wddbuser}
      DB_DATABASE: ${DB_DATABASE:-wddbname}
      DB_PASSWORD: ${DB_PASSWORD:-wddbpass}
    depends_on:
      - db
    command: ["sh", "-c", "python app_init.py && python app.py"]
    ports:
      - "5000:5000"
    networks:
      - forwebapi

  bot:
      container_name: bot
      build:
        context: ../../server/
        dockerfile: Dockerfile
      working_dir: /home/server/server
      environment:
        DB_HOST: db
        DB_USERNAME: ${DB_DATABASE:-wddbuser}
        DB_DATABASE: ${DB_DATABASE:-wddbname}
        DB_PASSWORD: ${DB_PASSWORD:-wddbpass}
      depends_on:
        - db
      command: ["sh", "-c", "python bot.py"]
      ports:
        - "5001:5001"
      networks:
        - forwebapi
      restart: always
      volumes:
        - ../../server/src:/home/server/server

  worker:
    build:
      context: ../../server/
      dockerfile: Dockerfile
    container_name: worker
    working_dir: /home/server/server
    entrypoint: celery
    command: -A celery_schedulers.celery_app worker --loglevel=info
    networks:
      - forwebapi
    volumes:
      - ../../server/src:/home/server/server


  beat:
    build:
      context: ../../server/
      dockerfile: Dockerfile
    container_name: beat
    working_dir: /home/server/server
    entrypoint: celery
    command: -A celery_schedulers.celery_app beat --loglevel=info
    networks:
      - forwebapi


  db:
    container_name: db
    image: library/mariadb:10.5.5
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
      MYSQL_DATABASE: ${DB_DATABASE:-wddbname}
      MYSQL_USER: ${DB_DATABASE:-wddbuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wddbpass}
    networks:
      - forwebapi
    ports:
     - "801:801"

  redis:
    container_name: redis
    image: redis:7.2.0-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    # command: --save 300 5 --loglevel warning
    # entrypoint: redis-server --appendonly yes --requirepass wddbpass
    networks:
      - forwebapi

networks:
  forwebapi:
    name: forwebapi
    driver: bridge