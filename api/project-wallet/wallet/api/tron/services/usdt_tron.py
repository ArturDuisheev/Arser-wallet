import codecs
import json
from wallet.api.tron.services.tron_global import TRCToken
from hexbytes import HexBytes
from global_modules.exeptions import CodeDataException

from django.conf import settings
from tronpy import Tron
from tronpy.providers import HTTPProvider
from tronpy.keys import to_hex_address
from tronpy.keys import PrivateKey
from tronpy.contract import Contract
from tronpy.tron import TransactionBuilder, Transaction
from solc.main import get_solc_version


client = Tron(network='nile') 


class UsdtTronService:

    @classmethod
    def get_balance(cls, account: dict) -> float:
        
        return account.get('balance')
    
    @classmethod
    def get_account(cls, address: str) -> dict:
        try:
            return client.get_account(address)
        except IndexError:
            raise CodeDataException("Неверный адресс аккаунта")

    
    @classmethod
    def create_wallet(cls, **kwargs) -> str:
        """
        address = client.generate_address()
        cls.create_transaction(from_address=settings.FROM_ADDRESS_TRON, to_address=address["hex_address"], amount=1,
                                      priv_key=priv_key)
        client.to_canonical_address(address["hex_address"])
        """
        print(client.generate_address())
        priv_key = PrivateKey(bytes.fromhex(settings.PRIVATE_KEYS_FROM_ADDRESS_TRON))
        from .abi import abi
        contract = Contract(client=client, origin_address=priv_key.public_key.to_base58check_address(), owner_address=priv_key.public_key.to_base58check_address(),
                            abi=abi,bytecode = "60806040526040518060400160405280600b81526020017f53696d706c65546f6b656e000000000000000000000000000000000000000000815250600090816200004a9190620003b6565b506040518060400160405280600381526020017f53544b000000000000000000000000000000000000000000000000000000000081525060019081620000919190620003b6565b506012600260006101000a81548160ff021916908360ff160217905550600260009054906101000a900460ff1660ff16600a620000cf919062000620565b620f4240620000df919062000671565b600355348015620000ef57600080fd5b50600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620006bc565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001be57607f821691505b602082108103620001d457620001d362000176565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200023e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001ff565b6200024a8683620001ff565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000297620002916200028b8462000262565b6200026c565b62000262565b9050919050565b6000819050919050565b620002b38362000276565b620002cb620002c2826200029e565b8484546200020c565b825550505050565b600090565b620002e2620002d3565b620002ef818484620002a8565b505050565b5b8181101562000317576200030b600082620002d8565b600181019050620002f5565b5050565b601f82111562000366576200033081620001da565b6200033b84620001ef565b810160208510156200034b578190505b620003636200035a85620001ef565b830182620002f4565b50505b505050565b600082821c905092915050565b60006200038b600019846008026200036b565b1980831691505092915050565b6000620003a6838362000378565b9150826002028217905092915050565b620003c1826200013c565b67ffffffffffffffff811115620003dd57620003dc62000147565b5b620003e98254620001a5565b620003f68282856200031b565b600060209050601f8311600181146200042e576000841562000419578287015190505b62000425858262000398565b86555062000495565b601f1984166200043e86620001da565b60005b82811015620004685784890151825560018201915060208501945060208101905062000441565b8683101562000488578489015162000484601f89168262000378565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200052b578086048111156200050357620005026200049d565b5b6001851615620005135780820291505b80810290506200052385620004cc565b9450620004e3565b94509492505050565b60008262000546576001905062000619565b8162000556576000905062000619565b81600181146200056f57600281146200057a57620005b0565b600191505062000619565b60ff8411156200058f576200058e6200049d565b5b8360020a915084821115620005a957620005a86200049d565b5b5062000619565b5060208310610133831016604e8410600b8410161715620005ea5782820a905083811115620005e457620005e36200049d565b5b62000619565b620005f98484846001620004d9565b925090508184048111156200061357620006126200049d565b5b81810290505b9392505050565b60006200062d8262000262565b91506200063a8362000262565b9250620006697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000534565b905092915050565b60006200067e8262000262565b91506200068b8362000262565b92508282026200069b8162000262565b91508282048414831517620006b557620006b46200049d565b5b5092915050565b610e6480620006cc6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906109a1565b60405180910390f35b6100d060048036038101906100cb9190610a5c565b61028e565b6040516100dd9190610ab7565b60405180910390f35b6100ee61031b565b6040516100fb9190610ae1565b60405180910390f35b61011e60048036038101906101199190610afc565b610321565b60405161012b9190610ab7565b60405180910390f35b61013c61068b565b6040516101499190610b6b565b60405180910390f35b61016c60048036038101906101679190610b86565b61069e565b6040516101799190610ae1565b60405180910390f35b61018a6106b6565b60405161019791906109a1565b60405180910390f35b6101ba60048036038101906101b59190610a5c565b610744565b6040516101c79190610ab7565b60405180910390f35b6101ea60048036038101906101e59190610bb3565b6108ec565b6040516101f79190610ae1565b60405180910390f35b6000805461020d90610c22565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610c22565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60035481565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038890610c9f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f790610c9f565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047990610d0b565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890610d77565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105909190610dc6565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e69190610dfa565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106799190610dc6565b92505081905550600190509392505050565b600260009054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600180546106c390610c22565b80601f01602080910402602001604051908101604052809291908181526020018280546106ef90610c22565b801561073c5780601f106107115761010080835404028352916020019161073c565b820191906000526020600020905b81548152906001019060200180831161071f57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab90610c9f565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90610d0b565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108859190610dc6565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108db9190610dfa565b925050819055506001905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600081519050919050565b600082825260208201905092915050565b60005b8381101561094b578082015181840152602081019050610930565b60008484015250505050565b6000601f19601f8301169050919050565b600061097382610911565b61097d818561091c565b935061098d81856020860161092d565b61099681610957565b840191505092915050565b600060208201905081810360008301526109bb8184610968565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f3826109c8565b9050919050565b610a03816109e8565b8114610a0e57600080fd5b50565b600081359050610a20816109fa565b92915050565b6000819050919050565b610a3981610a26565b8114610a4457600080fd5b50565b600081359050610a5681610a30565b92915050565b60008060408385031215610a7357610a726109c3565b5b6000610a8185828601610a11565b9250506020610a9285828601610a47565b9150509250929050565b60008115159050919050565b610ab181610a9c565b82525050565b6000602082019050610acc6000830184610aa8565b92915050565b610adb81610a26565b82525050565b6000602082019050610af66000830184610ad2565b92915050565b600080600060608486031215610b1557610b146109c3565b5b6000610b2386828701610a11565b9350506020610b3486828701610a11565b9250506040610b4586828701610a47565b9150509250925092565b600060ff82169050919050565b610b6581610b4f565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b600060208284031215610b9c57610b9b6109c3565b5b6000610baa84828501610a11565b91505092915050565b60008060408385031215610bca57610bc96109c3565b5b6000610bd885828601610a11565b9250506020610be985828601610a11565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c3a57607f821691505b602082108103610c4d57610c4c610bf3565b5b50919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000610c89600f8361091c565b9150610c9482610c53565b602082019050919050565b60006020820190508181036000830152610cb881610c7c565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610cf560148361091c565b9150610d0082610cbf565b602082019050919050565b60006020820190508181036000830152610d2481610ce8565b9050919050565b7f416c6c6f77616e63652065786365656465640000000000000000000000000000600082015250565b6000610d6160128361091c565b9150610d6c82610d2b565b602082019050919050565b60006020820190508181036000830152610d9081610d54565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dd182610a26565b9150610ddc83610a26565b9250828203905081811115610df457610df3610d97565b5b92915050565b6000610e0582610a26565b9150610e1083610a26565b9250828201905080821115610e2857610e27610d97565b5b9291505056fea26469706673582212205981c8b739ba52fdc6cf9f07fa26c30a0dbdb10970b0c6bb3a711ec8c85e086e64736f6c63430008120033"

                            )
        a = contract.deploy()
        txn = (
                    a
                    .fee_limit(20_000_000)
                    .build()
                    .sign(priv_key)
                )
        result = txn.broadcast().wait()
        print(result)
        return result['contract_address']
        return "1"
    @classmethod
    def create_transaction(cls, from_address: str, to_address: str, amount: int, priv_key: PrivateKey):
        a = client.get_contract_as_shielded_trc20("TYZUmVhWxfG9u3ie8pygYz2MUNQSeAQ39d")
        print(client.get_account_balance("TYZUmVhWxfG9u3ie8pygYz2MUNQSeAQ39d"))
        contract = client.get_contract("TLrfvrCb84Ec2UoB9jGCmC8w1Kv23yoYh3")
        from .abi import abi
        contract.abi = abi
        priv_key = PrivateKey(bytes.fromhex(settings.PRIVATE_KEYS_FROM_ADDRESS_TRON))
        amount_in_wei = int(amount * 10 ** 6)
        # Base tx
        tx: TransactionBuilder = contract.functions.transfer(to_address, amount_in_wei).with_owner(priv_key.public_key.to_base58check_address())
        tx: Transaction = tx.build()
        print(priv_key.public_key.to_hex_address())
        signed_txn = tx.sign(priv_key)
        response = signed_txn.broadcast().wait()
        print(response)
        return response['txid']
